services:
  traefik-init:
    image: docker.io/alpine:latest
    entrypoint: sh
    environment:
      DOMAIN: "${DOMAIN:-localhost}"
      GRAFANA_DOMAIN: "${GRAFANA_DOMAIN:-grafana.localhost}"
    command:
      - -c
      - |
        test -f /traefik_config/dynamic.yml && echo "Skipping: target file already exists" && exit 0
        export http=http
        [ "${TRAEFIK_HTTPS}" = "y" ] && http=https
        apk add envsubst
        cat /traefik_config/template-$${http}-dynamic.yml | envsubst > /traefik_config/dynamic.yml
    volumes:
      - ./files/traefik/:/traefik_config:rw
    restart: "no"

  traefik:
    image: docker.io/traefik:${TRAEFIK_RELEASE:-v3.4}
    restart: always
    depends_on:
      traefik-init:
        condition: service_completed_successfully
    command:
      - --api.insecure=${TRAEFIK_API_INSECURE:-false}
      - --providers.docker=false
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:${TRAEFIK_HTTP_PORT:-80}
      - --entrypoints.https.address=:${TRAEFIK_HTTPS_PORT:-443}
      - --entrypoints.metrics.address=:9096
      - --metrics.prometheus=true
      # ssl
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=${LETSENCRYPT_EMAIL?need email for cert expiry notifications}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      # ssl
      - --metrics.prometheus.entryPoint=metrics # Associate metrics with the 'metrics' entry point
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addRoutersLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --providers.file.filename=/traefik_config/dynamic.yml
      - --providers.file.watch=true
    ports:
      - ${TRAEFIK_HTTP_PORT:-80}:${TRAEFIK_HTTP_PORT:-80}
      - ${TRAEFIK_DASHBOARD_PORT:-8080}:8080
      - ${TRAEFIK_HTTPS_PORT:-443}:${TRAEFIK_HTTPS_PORT:-443}
    expose:
      - 9096
      - ${TRAEFIK_HTTP_PORT:-80}
      - ${TRAEFIK_DASHBOARD_PORT:-8080}
      - ${TRAEFIK_HTTPS_PORT:-443}
    volumes:
      - traefik:/letsencrypt:rw
      - ./files/traefik/:/traefik_config:rw
    # healthcheck:
    #   test: ["CMD", "traefik", "healthcheck"]
    #   interval: 30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 30s


volumes:
  # this is for ssl shennanigans, users usually won't need to bother with it
  traefik: { driver: local }